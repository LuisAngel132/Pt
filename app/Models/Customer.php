<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

/**
 * Eloquent class to describe the customers table
 *
 * automatically generated by ModelGenerator.php
 */
class Customer extends Model {
	/**
	 * The table associated with the model Customer
	 *
	 * @var string
	 */
	protected $table = 'customers';

	/**
	 * Indicates if the model should be timestamped.
	 *
	 * @var bool
	 */
	public $timestamps = false;

	public function getDates() {
		return ['dob'];
	}

	/**
	 * The attributes that are mass assignable.
	 *
	 * @var array
	 */
	protected $fillable = ['users_id', 'payment_customer_id', 'region', 'phone_number', 'dob', 'bio', 'rfc', 'image_url'];

	/**
	 * Relationship with the App\Models\User model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\belongsTo
	 */
	public function users() {
		return $this->belongsTo('App\Models\User', 'users_id', 'id');
	}

	/**
	 * Relationship with the App\Models\Cart model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function carts() {
		return $this->hasMany('App\Models\Cart', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomerAddress model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customerAddresses() {
		return $this->hasMany('App\Models\CustomerAddress', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomerDesign model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customerDesigns() {
		return $this->hasMany('App\Models\CustomerDesign', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomerLike model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customerLikes() {
		return $this->hasMany('App\Models\CustomerLike', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomerPayment model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customerPayments() {
		return $this->hasMany('App\Models\CustomerPayment', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomerRating model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customerRatings() {
		return $this->hasMany('App\Models\CustomerRating', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomerReview model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customerReviews() {
		return $this->hasMany('App\Models\CustomerReview', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\CustomersCode model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function customersCodes() {
		return $this->hasMany('App\Models\CustomersCode', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\Order model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function orders() {
		return $this->hasMany('App\Models\Order', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\OrdersCoupon model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function ordersCoupons() {
		return $this->hasMany('App\Models\OrdersCoupon', 'customers_id', 'id');
	}

	/**
	 * Relationship with the App\Models\Refund model.
	 *
	 * @return    Illuminate\Database\Eloquent\Relations\hasMany
	 */
	public function refunds() {
		return $this->hasMany('App\Models\Refund', 'customers_id', 'id');
	}

}
