<?php 
 namespace App\Models;

use Illuminate\Database\Eloquent\Model;
/**
 * Eloquent class to describe the orders table
 *
 * automatically generated by ModelGenerator.php
 */
class Order extends Model
{
 /**
 * The table associated with the model Order
 *
 * @var string
 */
    protected $table = 'orders';

 /**
 * The attributes that are mass assignable.
 *
 * @var array
 */
    protected $fillable = ['order_id', 'amount', 'is_billable', 'origin', 'description'];

    /**
    * Relationship with the App\Models\Customer model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\belongsTo
    */ 
    public function customers()
    {
        return $this->belongsTo('App\Models\Customer', 'customers_id', 'id');
    }

    /**
    * Relationship with the App\Models\OrderStatus model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\belongsTo
    */ 
    public function orderStatus()
    {
        return $this->belongsTo('App\Models\OrderStatus', 'order_status_id', 'id');
    }

    /**
    * Relationship with the App\Models\PaymentMethod model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\belongsTo
    */ 
    public function paymentMethods()
    {
        return $this->belongsTo('App\Models\PaymentMethod', 'payment_methods_id', 'id');
    }

    /**
    * Relationship with the App\Models\CustomerReview model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function customerReviews()
    {
        return $this->hasMany('App\Models\CustomerReview', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\GiftMessage model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function giftMessages()
    {
        return $this->hasMany('App\Models\GiftMessage', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\Invoice model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function invoices()
    {
        return $this->hasMany('App\Models\Invoice', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\OrderFee model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function orderFees()
    {
        return $this->hasMany('App\Models\OrderFee', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\OrderPayment model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function orderPayments()
    {
        return $this->hasMany('App\Models\OrderPayment', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\OrderProduct model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function orderProducts()
    {
        return $this->hasMany('App\Models\OrderProduct', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\OrdersCoupon model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function ordersCoupons()
    {
        return $this->hasMany('App\Models\OrdersCoupon', 'orders_id', 'id');
    }

    /**
    * Relationship with the App\Models\Shipment model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\hasMany
    */ 
    public function shipments()
    {
        return $this->hasMany('App\Models\Shipment', 'orders_id', 'id');
    }

     /**
    * Relationship with the App\Models\OrderStatus model.
    * 
    * @return    Illuminate\Database\Eloquent\Relations\belongsTo
    */ 
    public function orderLog()
    {
        return $this->hasMany('App\Models\LogOrder', 'orders_id', 'id');
    }
}

